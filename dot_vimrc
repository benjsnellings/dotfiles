
set tabstop=4
set softtabstop=4
set expandtab
set number
set showcmd
set cursorline
syntax on

" Visual Settings ----------------------------------------------------------------------------"

" Set Insert mode visibility

autocmd InsertEnter * set cul
autocmd InsertLeave * set nocul

" search settings 
set ignorecase
set smartcase
set hlsearch

" Auto Commands ----------------------------------------------------------------------------

" Auto strip whitespaces
autocmd FileType c,cpp,java,php,ruby,eruby,python,rust,ant,xml autocmd BufWritePre <buffer> :%s/\s\+$//e


" Naviation ----------------------------------------------------------------------------
set backspace=indent,eol,start  " more powerful backspacing

nnoremap H ^
nnoremap L $

" Key Bindings -------------------------------------------------------------------------
let mapleader = ","

inoremap jk <esc>

"paste and keep context
xnoremap <leader>p "_dP
noremap <C-p> viw"_dP 

"Smart way to move between windows
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l
nnoremap <C-H> <C-W>h
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-L> <C-W>l

" Quick Set syntax for string replace
" nnoremap <Leader>s :%s/\<<C-r><C-w>\>//g<Left><Left>
vnoremap <Leader>r "hy:%s/<C-r>h//g<left><left>
vnoremap <Leader>s "sy

" Remove search highlighting on escape
nnoremap <esc> :noh<return><esc>

" set clipboard=unnamedplus


" Spell check settings -------------------------------------------------------------------------
hi clear SpellBad
hi clear SpellCap
hi SpellBad cterm=underline
hi SpellBad ctermfg=Red
hi SpellCap cterm=underline
hi SpellLocal cterm=underline
hi SpellRare cterm=underline


" vim-plug plugins -------------------------------------------------------------------------
" https://github.com/junegunn/vim-plug

" Auto Install
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
          silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
            autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif

call plug#begin('~/.vim/plugged')
  Plug 'preservim/nerdtree'
  Plug 'tpope/vim-surround'
  Plug 'junegunn/vim-peekaboo'
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'junegunn/fzf.vim'
call plug#end()

" plugin shortcuts -------------------------------------------------------------------------


" NerdTree
map <F2> :NERDTreeToggle<CR>
nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

" Start NERDTree when Vim is started without file arguments.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists('s:std_in') | NERDTree | endif
" END


